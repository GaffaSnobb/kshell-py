from typing import Any
import numpy as np
import kshell_utilities as ksutil
from kshell_utilities.data_structures import Interaction
from kshell_utilities.loaders import load_interaction

def O18_w_manual_hamiltonian() -> np.ndarray:
    """
    Manual construction of the shell model hamiltonian for 18O (2
    valence neutrons) with the w interaction.

    TODO: I made this function thinking there were two valence protons
    while it it actually valence neutrons. It still works because the
    interaction and model space treats the protons and neutrons the same
    in this case, but it should be changed so that it is correct.
    """
    O18 = ksutil.loadtxt(path="O18_w/")
    interaction: Interaction = load_interaction(filename_interaction="O18_w/w.snt")
    s = interaction.spe

    def t(a, b, c, d, j):
        return interaction.tbme.get((a, b, c, d, j), 0)
        return interaction.tbme[(a, b, c, d, j)]

    H = np.array([
        #         d3/2^2                     d5/2^2                     s1/2^2                          d3/2 d5/2                       d3/2 s1/2                       d5/2 s1/2
        [2*s[0] + t(0, 0, 0, 0, 0),          t(0, 0, 1, 1, 0),          t(0, 0, 2, 2, 0),               t(0, 0, 0, 1, 0),               t(0, 0, 0, 2, 0),               t(0, 0, 1, 2, 0)], # d3/2^2
        [         t(1, 1, 0, 0, 0), 2*s[1] + t(1, 1, 1, 1, 0),          t(1, 1, 2, 2, 0),               t(1, 1, 0, 1, 0),               t(1, 1, 0, 2, 0),               t(1, 1, 1, 2, 0)], # d5/2^2
        [         t(2, 2, 0, 0, 0),          t(2, 2, 1, 1, 0), 2*s[2] + t(2, 2, 2, 2, 0),               t(2, 2, 0, 1, 0),               t(2, 2, 0, 2, 0),               t(2, 2, 1, 2, 0)], # s1/2^2
        [         t(0, 1, 0, 0, 0),          t(0, 1, 1, 1, 0),          t(0, 1, 2, 2, 0), s[0] + s[1] + t(0, 1, 0, 1, 0),               t(0, 1, 0, 2, 0),               t(0, 1, 1, 2, 0)], # d3/2 d5/2
        [         t(0, 2, 0, 0, 0),          t(0, 2, 1, 1, 0),          t(0, 2, 2, 2, 0),               t(0, 2, 0, 1, 0), s[0] + s[2] + t(0, 2, 0, 2, 0),               t(0, 2, 1, 2, 0)], # d3/2 s1/2
        [         t(1, 2, 0, 0, 0),          t(1, 2, 1, 1, 0),          t(1, 2, 2, 2, 0),               t(1, 2, 0, 1, 0),               t(1, 2, 0, 2, 0), s[1] + s[2] + t(1, 2, 1, 2, 0)], # d5/2 s1/2
    ])

    H_alt = np.array([
        #         (0, 0, 2)                       (0, 1, 1)                  (0, 2, 0)                       (1, 0, 1)                       (1, 1, 0)                  (2, 0, 0)
        [2*s[2] + t(2, 2, 2, 2, 0),               t(2, 2, 1, 2, 0),          t(2, 2, 1, 1, 0),               t(2, 2, 0, 2, 0),               t(2, 2, 0, 1, 0),          t(2, 2, 0, 0, 0)],
        [         t(1, 2, 2, 2, 0), s[1] + s[2] + t(1, 2, 1, 2, 0),          t(1, 2, 1, 1, 0),               t(1, 2, 0, 2, 0),               t(1, 2, 0, 1, 0),          t(1, 2, 0, 0, 0)],
        [         t(1, 1, 2, 2, 0),               t(1, 1, 1, 2, 0), 2*s[1] + t(1, 1, 1, 1, 0),               t(1, 1, 0, 2, 0),               t(1, 1, 0, 1, 0),          t(1, 1, 0, 0, 0)],
        [         t(0, 2, 2, 2, 0),               t(0, 2, 1, 2, 0),          t(0, 2, 1, 1, 0), s[0] + s[2] + t(0, 2, 0, 2, 0),               t(0, 2, 0, 1, 0),          t(0, 2, 0, 0, 0)],
        [         t(0, 1, 2, 2, 0),               t(0, 1, 1, 2, 0),          t(0, 1, 1, 1, 0),               t(0, 1, 0, 2, 0), s[0] + s[1] + t(0, 1, 0, 1, 0),          t(0, 1, 0, 0, 0)],
        [         t(0, 0, 2, 2, 0),               t(0, 0, 1, 2, 0),          t(0, 0, 1, 1, 0),               t(0, 0, 0, 2, 0),               t(0, 0, 0, 1, 0), 2*s[0] + t(0, 0, 0, 0, 0)],
    ])
    
    # print(H)
    # print()
    # print(H_alt)
    assert np.all(H == H.T)
    assert np.all(H_alt == H_alt.T)

    from numpy.linalg import eigh
    eigenvals, eigenvecs = eigh(H_alt)

    print(eigenvals)
    print()
    print(O18.levels[:, 0])

    return H_alt

def O18_w_manual_hamiltonian_v2() -> np.ndarray:
    """
                  10    11        
                -  O  -  O  -             s1/2: 2
                 -1/2   1/2

       4     5     6     7     8     9    
    -  O  -  O  -  O  -  O  -  O  -  O    d5/2: 1
     -5/2  -3/2  -1/2   1/2   3/2   5/2

             0     1     2     3
          -  O  -  O  -  O  -  O  -       d3/2: 0
           -3/2  -1/2   1/2   3/2
    """
    # O18 = ksutil.loadtxt(path="O18_w/")
    O18 = ksutil.loadtxt(path="tmp_delete/")
    interaction: Interaction = load_interaction(filename_interaction="O18_w/w.snt")
    s = interaction.spe

    def t(a, b, c, d, j):
        return interaction.tbme.get((a, b, c, d, j), 0)
        return interaction.tbme[(a, b, c, d, j)]

    H_new = np.array([
    #   (0, 3)                                        (0, 8)                              (1, 2)                              (1, 7)                              (1, 11)                              (2, 6)                              (2, 10)                              (3, 5)                              (4, 9)                              (5, 8)                              (6, 7)                              (6, 11)                              (7, 10)                              (10, 11)
#            .+tbme(0, 0, 0, 0)                  .+tbme(0, 0, 0, 1)............
        [2*s[0] + t(0, 0, 0, 0, 0),                   t(0, 0, 0, 1, 0),                   t(0, 0, 0, 0, 0),                   t(0, 0, 0, 1, 0),                   t(0, 0, 0, 2, 0),                   t(0, 0, 0, 1, 0),                   t(0, 0, 0, 2, 0),                   t(0, 0, 0, 1, 0),                   t(0, 0, 1, 1, 0),                   t(0, 0, 1, 1, 0),                   t(0, 0, 1, 1, 0),                   t(0, 0, 1, 2, 0),                   t(0, 0, 1, 2, 0),                   t(0, 0, 2, 2, 0),                   ],# (0, 3)
#       .     +tbme(0, 1, 0, 0)                  .+tbme(0, 1, 0, 1)                       .                                   .                                   .                                   .                                   .                                   .                                   .                               +tbme(0, 1, 1, 1)....
        [         t(0, 1, 0, 0, 0),     s[0] + s[1] + t(0, 1, 0, 1, 0),                   t(0, 1, 0, 0, 0),                   t(0, 1, 0, 1, 0),                   t(0, 1, 0, 2, 0),                   t(0, 1, 0, 1, 0),                   t(0, 1, 0, 2, 0),                   t(0, 1, 0, 1, 0),                   t(0, 1, 1, 1, 0),                   t(0, 1, 1, 1, 0),                   t(0, 1, 1, 1, 0),                   t(0, 1, 1, 2, 0),                   t(0, 1, 1, 2, 0),                   t(0, 1, 2, 2, 0),                   ],# (0, 8)
#                 .                                   .                              .+tbme(0, 0, 0, 0)                  .+tbme(0, 0, 0, 1)                  .+tbme(0, 0, 0, 2).........
        [         t(0, 0, 0, 0, 0),                   t(0, 0, 0, 1, 0),          2*s[0] + t(0, 0, 0, 0, 0),                   t(0, 0, 0, 1, 0),                   t(0, 0, 0, 2, 0),                   t(0, 0, 0, 1, 0),                   t(0, 0, 0, 2, 0),                   t(0, 0, 0, 1, 0),                   t(0, 0, 1, 1, 0),                   t(0, 0, 1, 1, 0),                   t(0, 0, 1, 1, 0),                   t(0, 0, 1, 2, 0),                   t(0, 0, 1, 2, 0),                   t(0, 0, 2, 2, 0),                   ],# (1, 2)
#                 .                                   .                              .+tbme(0, 1, 0, 0)                  .+tbme(0, 1, 0, 1)                  .+tbme(0, 1, 0, 2)                       .                                   .                                   .                                   .                                   .                              .+tbme(0, 1, 1, 1)...
        [         t(0, 1, 0, 0, 0),                   t(0, 1, 0, 1, 0),                   t(0, 1, 0, 0, 0),     s[0] + s[1] + t(0, 1, 0, 1, 0),                   t(0, 1, 0, 2, 0),                   t(0, 1, 0, 1, 0),                   t(0, 1, 0, 2, 0),                   t(0, 1, 0, 1, 0),                   t(0, 1, 1, 1, 0),                   t(0, 1, 1, 1, 0),                   t(0, 1, 1, 1, 0),                   t(0, 1, 1, 2, 0),                   t(0, 1, 1, 2, 0),                   t(0, 1, 2, 2, 0),                   ],# (1, 7)
#                 .                                   .                              .+tbme(0, 2, 0, 0)                  .+tbme(0, 2, 0, 1)                  .+tbme(0, 2, 0, 2)                       .                                   .                                   .                                   .                                   .                                   .                              .+tbme(0, 2, 1, 2)                       .                              .+tbme(0, 2, 2, 2)
        [         t(0, 2, 0, 0, 0),                   t(0, 2, 0, 1, 0),                   t(0, 2, 0, 0, 0),                   t(0, 2, 0, 1, 0),     s[0] + s[2] + t(0, 2, 0, 2, 0),                   t(0, 2, 0, 1, 0),                   t(0, 2, 0, 2, 0),                   t(0, 2, 0, 1, 0),                   t(0, 2, 1, 1, 0),                   t(0, 2, 1, 1, 0),                   t(0, 2, 1, 1, 0),                   t(0, 2, 1, 2, 0),                   t(0, 2, 1, 2, 0),                   t(0, 2, 2, 2, 0),                   ],# (1, 11)
#                 .                                   .                                   .                                   .                                   .                              .+tbme(0, 1, 0, 1)                  .+tbme(0, 1, 0, 2).......
        [         t(0, 1, 0, 0, 0),                   t(0, 1, 0, 1, 0),                   t(0, 1, 0, 0, 0),                   t(0, 1, 0, 1, 0),                   t(0, 1, 0, 2, 0),     s[0] + s[1] + t(0, 1, 0, 1, 0),                   t(0, 1, 0, 2, 0),                   t(0, 1, 0, 1, 0),                   t(0, 1, 1, 1, 0),                   t(0, 1, 1, 1, 0),                   t(0, 1, 1, 1, 0),                   t(0, 1, 1, 2, 0),                   t(0, 1, 1, 2, 0),                   t(0, 1, 2, 2, 0),                   ],# (2, 6)
#                 .                                   .                                   .                                   .                                   .                              .+tbme(0, 2, 0, 1)                  .+tbme(0, 2, 0, 2)                       .                                   .                                   .                                   .                                   .                              .+tbme(0, 2, 1, 2).
        [         t(0, 2, 0, 0, 0),                   t(0, 2, 0, 1, 0),                   t(0, 2, 0, 0, 0),                   t(0, 2, 0, 1, 0),                   t(0, 2, 0, 2, 0),                   t(0, 2, 0, 1, 0),     s[0] + s[2] + t(0, 2, 0, 2, 0),                   t(0, 2, 0, 1, 0),                   t(0, 2, 1, 1, 0),                   t(0, 2, 1, 1, 0),                   t(0, 2, 1, 1, 0),                   t(0, 2, 1, 2, 0),                   t(0, 2, 1, 2, 0),                   t(0, 2, 2, 2, 0),                   ],# (2, 10)
#                 .                                   .                                   .                                   .                                   .                                   .                                   .                              .+tbme(0, 1, 0, 1)......
        [         t(0, 1, 0, 0, 0),                   t(0, 1, 0, 1, 0),                   t(0, 1, 0, 0, 0),                   t(0, 1, 0, 1, 0),                   t(0, 1, 0, 2, 0),                   t(0, 1, 0, 1, 0),                   t(0, 1, 0, 2, 0),     s[0] + s[1] + t(0, 1, 0, 1, 0),                   t(0, 1, 1, 1, 0),                   t(0, 1, 1, 1, 0),                   t(0, 1, 1, 1, 0),                   t(0, 1, 1, 2, 0),                   t(0, 1, 1, 2, 0),                   t(0, 1, 2, 2, 0),                   ],# (3, 5)
#                 .                                   .                                   .                                   .                                   .                                   .                                   .                                   .                              .+tbme(1, 1, 1, 1).....
        [         t(1, 1, 0, 0, 0),                   t(1, 1, 0, 1, 0),                   t(1, 1, 0, 0, 0),                   t(1, 1, 0, 1, 0),                   t(1, 1, 0, 2, 0),                   t(1, 1, 0, 1, 0),                   t(1, 1, 0, 2, 0),                   t(1, 1, 0, 1, 0),          2*s[1] + t(1, 1, 1, 1, 0),                   t(1, 1, 1, 1, 0),                   t(1, 1, 1, 1, 0),                   t(1, 1, 1, 2, 0),                   t(1, 1, 1, 2, 0),                   t(1, 1, 2, 2, 0),                   ],# (4, 9)
#                 .                              .+tbme(1, 1, 0, 1)                       .                                   .                                   .                                   .                                   .                                   .                                   .                              .+tbme(1, 1, 1, 1)....        
        [         t(1, 1, 0, 0, 0),                   t(1, 1, 0, 1, 0),                   t(1, 1, 0, 0, 0),                   t(1, 1, 0, 1, 0),                   t(1, 1, 0, 2, 0),                   t(1, 1, 0, 1, 0),                   t(1, 1, 0, 2, 0),                   t(1, 1, 0, 1, 0),                   t(1, 1, 1, 1, 0),          2*s[1] + t(1, 1, 1, 1, 0),                   t(1, 1, 1, 1, 0),                   t(1, 1, 1, 2, 0),                   t(1, 1, 1, 2, 0),                   t(1, 1, 2, 2, 0),                   ],# (5, 8)
#                 .                                   .                                   .                              .+tbme(1, 1, 0, 1)                       .                                   .                                   .                                   .                                   .                                   .                              .+tbme(1, 1, 1, 1)                  .+tbme(1, 1, 1, 2)..
        [         t(1, 1, 0, 0, 0),                   t(1, 1, 0, 1, 0),                   t(1, 1, 0, 0, 0),                   t(1, 1, 0, 1, 0),                   t(1, 1, 0, 2, 0),                   t(1, 1, 0, 1, 0),                   t(1, 1, 0, 2, 0),                   t(1, 1, 0, 1, 0),                   t(1, 1, 1, 1, 0),                   t(1, 1, 1, 1, 0),          2*s[1] + t(1, 1, 1, 1, 0),                   t(1, 1, 1, 2, 0),                   t(1, 1, 1, 2, 0),                   t(1, 1, 2, 2, 0),                   ],# (6, 7)
#                 .                                   .                                   .                                   .                              .+tbme(1, 2, 0, 2)                       .                                   .                                   .                                   .                                   .                              .+tbme(1, 2, 1, 1)                  .+tbme(1, 2, 1, 2)                       .                              .+tbme(1, 2, 2, 2)
        [         t(1, 2, 0, 0, 0),                   t(1, 2, 0, 1, 0),                   t(1, 2, 0, 0, 0),                   t(1, 2, 0, 1, 0),                   t(1, 2, 0, 2, 0),                   t(1, 2, 0, 1, 0),                   t(1, 2, 0, 2, 0),                   t(1, 2, 0, 1, 0),                   t(1, 2, 1, 1, 0),                   t(1, 2, 1, 1, 0),                   t(1, 2, 1, 1, 0),     s[1] + s[2] + t(1, 2, 1, 2, 0),                   t(1, 2, 1, 2, 0),                   t(1, 2, 2, 2, 0),                   ],# (6, 11)
#                 .                                   .                                   .                                   .                                   .                                   .                              .+tbme(1, 2, 0, 2)                       .                                   .                                   .                                   .                                   .                              .+tbme(1, 2, 1, 2).
        [         t(1, 2, 0, 0, 0),                   t(1, 2, 0, 1, 0),                   t(1, 2, 0, 0, 0),                   t(1, 2, 0, 1, 0),                   t(1, 2, 0, 2, 0),                   t(1, 2, 0, 1, 0),                   t(1, 2, 0, 2, 0),                   t(1, 2, 0, 1, 0),                   t(1, 2, 1, 1, 0),                   t(1, 2, 1, 1, 0),                   t(1, 2, 1, 1, 0),                   t(1, 2, 1, 2, 0),     s[1] + s[2] + t(1, 2, 1, 2, 0),                   t(1, 2, 2, 2, 0),                   ],# (7, 10)
#                 .                                   .                                   .                                   .                              .+tbme(2, 2, 0, 2)                       .                                   .                                   .                                   .                                   .                                   .                              .+tbme(2, 2, 1, 2)                       .                              .+tbme(2, 2, 2, 2)
        [         t(2, 2, 0, 0, 0),                   t(2, 2, 0, 1, 0),                   t(2, 2, 0, 0, 0),                   t(2, 2, 0, 1, 0),                   t(2, 2, 0, 2, 0),                   t(2, 2, 0, 1, 0),                   t(2, 2, 0, 2, 0),                   t(2, 2, 0, 1, 0),                   t(2, 2, 1, 1, 0),                   t(2, 2, 1, 1, 0),                   t(2, 2, 1, 1, 0),                   t(2, 2, 1, 2, 0),                   t(2, 2, 1, 2, 0),          2*s[2] + t(2, 2, 2, 2, 0),                   ],# (10, 11)
    ])
    assert np.all(H_new == H_new.T)

    H_old = np.array([
        #         d3/2^2                     d5/2^2                     s1/2^2                          d3/2 d5/2                       d3/2 s1/2                       d5/2 s1/2
        [2*s[0] + t(0, 0, 0, 0, 0),          t(0, 0, 1, 1, 0),          t(0, 0, 2, 2, 0),               t(0, 0, 0, 1, 0),               t(0, 0, 0, 2, 0),               t(0, 0, 1, 2, 0)], # d3/2^2
        [         t(1, 1, 0, 0, 0), 2*s[1] + t(1, 1, 1, 1, 0),          t(1, 1, 2, 2, 0),               t(1, 1, 0, 1, 0),               t(1, 1, 0, 2, 0),               t(1, 1, 1, 2, 0)], # d5/2^2
        [         t(2, 2, 0, 0, 0),          t(2, 2, 1, 1, 0), 2*s[2] + t(2, 2, 2, 2, 0),               t(2, 2, 0, 1, 0),               t(2, 2, 0, 2, 0),               t(2, 2, 1, 2, 0)], # s1/2^2
        [         t(0, 1, 0, 0, 0),          t(0, 1, 1, 1, 0),          t(0, 1, 2, 2, 0), s[0] + s[1] + t(0, 1, 0, 1, 0),               t(0, 1, 0, 2, 0),               t(0, 1, 1, 2, 0)], # d3/2 d5/2
        [         t(0, 2, 0, 0, 0),          t(0, 2, 1, 1, 0),          t(0, 2, 2, 2, 0),               t(0, 2, 0, 1, 0), s[0] + s[2] + t(0, 2, 0, 2, 0),               t(0, 2, 1, 2, 0)], # d3/2 s1/2
        [         t(1, 2, 0, 0, 0),          t(1, 2, 1, 1, 0),          t(1, 2, 2, 2, 0),               t(1, 2, 0, 1, 0),               t(1, 2, 0, 2, 0), s[1] + s[2] + t(1, 2, 1, 2, 0)], # d5/2 s1/2
    ])
    assert np.all(H_old == H_old.T)

    # for row in H_new:
    #     for elem in row:
    #         print(f"{elem:8.2f}", end="")

    #     print()

    from numpy.linalg import eigh
    print("OLD")
    eigenvals, eigenvecs = eigh(H_old)
    print(eigenvals)
    print("NEW")
    eigenvals, eigenvecs = eigh(H_new)
    print(eigenvals)
    print("KSHELL")
    print(O18.levels[:, 0])

def O19_w_manual_hamiltonian() -> np.ndarray:
    O19 = ksutil.loadtxt(path="O19_w/")
    interaction: Interaction = load_interaction(filename_interaction="O19_w/w.snt")
    spe = interaction.spe

    def tbme(a, b, c, d, j):
        return interaction.tbme.get((a, b, c, d, j), 0)

    """
             8     9    10    11
          -  O  -  O  -  O  -  O  -       d3/2
           -3/2  -1/2   1/2   3/2

       2     3     4     5     6     7    
    -  O  -  O  -  O  -  O  -  O  -  O    d5/2
     -5/2  -3/2  -1/2   1/2   3/2   5/2

                   0     1        
                -  O  -  O  -             s1/2
                 -1/2   1/2

    How many ways of placing three particles to make M = 1/2?

    For example:

             8     9    10    11
          -  O  -  O  -  O  -  O  -       d3/2
           -3/2  -1/2   1/2   3/2

       2     3     4     5     6     7
    -  O  -  O  -  O  -  X  -  O  -  O    d5/2
     -5/2  -3/2  -1/2   1/2   3/2   5/2
        
                   0     1
                -  X  -  X  -             s1/2
                 -1/2   1/2
    
    aka. (0, 1, 5)

    All possibilities:

    (0, 1, 5) = (1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0)
    (0, 1, 10)
    (0, 3, 7)
    (0, 4, 6)
    (0, 4, 11)
    (0, 5, 10)
    (0, 6, 9)
    (0, 7, 8)
    (0, 9, 11)

    (1, 2, 7)
    (1, 3, 6)
    (1, 3, 11)
    (1, 4, 5)
    (1, 4, 10)
    (1, 5, 9)
    (1, 6, 8)
    (1, 8, 11)
    (1, 9, 10)
    
    (2, 5, 7)
    (2, 6, 11)
    (2, 7, 10)
    
    (3, 4, 7)
    (3, 5, 6)
    (3, 5, 11)
    (3, 6, 10)
    (3, 7, 9)
    (3, 10, 11)
    
    (4, 5, 10)
    (4, 6, 9)
    (4, 7, 8)
    (4, 9, 11)
    
    (5, 6, 8)
    (5, 8, 11)
    (5, 9, 10)
    
    (6, 8, 10)
    
    (7, 8, 9)
    
    (8, 10, 11)
    
    """
    
    H = np.array([
        # [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0] -> (2, 2, 1) -> {(2, 2), (2, 1), (2, 1)}
        (2*spe[2] + spe[2] + spe[1] + spe[2] + spe[1]) + spe[2] + spe[1] + spe[2] + spe[1] + tbme(2, 2, 2, 2) + tbme(2, 1, 2, 1) + tbme(2, 1, 2, 1) + tbme(2, 2, 2, 1) + tbme(2, 2, 2, 1) + tbme(2, 1, 2, 2) + tbme(2, 1, 2, 1) + tbme(2, 1, 2, 1) + tbme(2, 1, 2, 2)                              # [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0] -> (2, 2, 1) -> {(2, 2), (2, 1), (2, 1)}
                                                                                        
    ])

    assert np.all(H == H.T)

    return H

if __name__ == "__main__":
    # O18_w_manual_hamiltonian()
    O18_w_manual_hamiltonian_v2()